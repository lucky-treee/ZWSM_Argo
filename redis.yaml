apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: redis
    component: cache
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      name: redis
  template:
    metadata:
      labels:
        name: redis
        component: cache
    spec:
      containers:
      - name: redis
        image: redis
        imagePullPolicy: Always
        args: ["--requirepass", "$(REDIS_PASS)"]
        ports:
        - containerPort: 6379
          name: redis-port
        env:
        - name: MASTER
          value: "true"
        - name: REDIS_PASS
          valueFrom:
            secretKeyRef:
              name: redis
              key: REDIS_PASS
---
# https://kubernetes.io/docs/concepts/services-networking/service/
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: luckytree-zwsm
spec:
  selector:
    name: redis
  type: ClusterIP
  ports:
  - name: redis-port
    protocol: TCP
    port: 6379
    targetPort: 6379
---
# https://kubernetes.io/docs/concepts/services-networking/ingress/
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
  labels:
    app.kubernetes.io/instance: luckytree-zwsm
  name: redis-ingress
  namespace: luckytree-zwsm
spec:
  tls:
  - hosts:
    - redis.c0dewave.com
    secretName: secret-https
  rules:
  - host: redis.c0dewave.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: redis-service
            port:
              number: 6379
---
